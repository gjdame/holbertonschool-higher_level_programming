The ``7-base_geometry.py`` module
======================

Using ``base_geometry``
-------------------
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>>
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>>
>>> try:
...     bg.integer_validator("name", "John")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...
[TypeError] name must be an integer
>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...
[ValueError] age must be greater than 0
>>> try:
...     bg.integer_validator("distance", -4)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...
[ValueError] distance must be greater than 0
>>> bg.integer_validator('greg', 84)

>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator('greg', )
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>>
>>> bg.integer_validator('greg', 99.9)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('{} must be an integer'.format(name))
TypeError: greg must be an integer

>>> bg.integer_validator('greg', (1, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('{} must be an integer'.format(name))
TypeError: greg must be an integer

>>> bg.integer_validator('greg', (1))

>>> bg.integer_validator('greg', (1,))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('{} must be an integer'.format(name))
TypeError: greg must be an integer

>>> bg.integer_validator('greg', -86)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise ValueError('{} must be greater than 0'.format(name))
ValueError: greg must be greater than 0

>>> bg.integer_validator('greg', -86.7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('{} must be an integer'.format(name))
TypeError: greg must be an integer
